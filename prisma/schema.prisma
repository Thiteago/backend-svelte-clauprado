// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id             Int    @id @default(autoincrement())
    nome           String
    dataNascimento String
    email          String @unique
    senha          String
    cpf            String
    rua            String
    numeroRua      String
    bairro         String
    cidade         String
    cep            String
    numeroTel      String
    numeroCel      String
    cargo          String @default("Usuario")

    vendas Venda[]
}

model Produto {
    id                  Int      @id @default(autoincrement())
    nome                String
    descricao           String
    dataCriacao         String
    dataPublicacao      DateTime @default(now())
    tipo                String
    valor               Float
    quantidadeEmEstoque Int      @default(1)
    peso                Float
    altura              String
    largura             String
    comprimento         String
    material            String
    categoria           String
    imagens             String[]

    vendas Venda[] @relation
}

model Venda {
    id         Int      @id @default(autoincrement())
    data_venda DateTime @default(now())
    valor      Float

    produtos Produto[] @relation

    pagamento   Pagamento @relation(fields: [pagamentoId], references: [id])
    pagamentoId Int

    user   User @relation(fields: [userId], references: [id])
    userId Int
}

model Pagamento {
    id              Int      @id @default(autoincrement())
    data_pagamento  DateTime @default(now())
    valor           Float
    forma_pagamento String
    status          String

    vendas Venda[]
    boleto Boleto?
}

model Boleto {
    id        Int      @id @default(autoincrement())
    data_venc DateTime @default(now())
    valor     Float
    status    String
    nomePDF   String

    pagamento   Pagamento @relation(fields: [pagamentoId], references: [id])
    pagamentoId Int       @unique
}
